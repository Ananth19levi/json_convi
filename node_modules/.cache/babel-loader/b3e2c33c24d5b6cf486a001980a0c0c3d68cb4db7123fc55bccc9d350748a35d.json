{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"excel-to-json\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Excel to JSON Converter\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"accordion-header\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"accordion-content\"\n};\nconst _hoisted_7 = [\"onUpdate:modelValue\", \"onInput\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"add-row\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add New Row\", -1 /* HOISTED */));\nconst _hoisted_10 = [\"onUpdate:modelValue\"];\nconst _hoisted_11 = {\n  key: 2,\n  class: \"json-view\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"JSON Data\", -1 /* HOISTED */));\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleFileUpload && _ctx.handleFileUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.searchQuery = $event),\n    placeholder: \"Search...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.searchQuery]]), _createCommentVNode(\" Edit Form \"), _ctx.filteredData && _ctx.filteredData.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredData.slice(1), (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: rowIndex,\n      class: \"accordion-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" Row \" + _toDisplayString(rowIndex + 1) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.toggleAccordion(rowIndex),\n      class: \"accordion-toggle\"\n    }, _toDisplayString(_ctx.expandedIndex === rowIndex ? '-' : '+'), 9 /* TEXT, PROPS */, _hoisted_5)]), _createVNode(_Transition, {\n      name: \"accordion\"\n    }, {\n      default: _withCtx(() => [_ctx.expandedIndex === rowIndex ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, cellIndex) => {\n        return _openBlock(), _createElementBlock(\"tr\", {\n          key: cellIndex\n        }, [_createElementVNode(\"th\", null, _toDisplayString(_ctx.filteredData[0][cellIndex]), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createCommentVNode(\" Editable input \"), _withDirectives(_createElementVNode(\"input\", {\n          \"onUpdate:modelValue\": $event => _ctx.filteredData[rowIndex + 1][cellIndex] = $event,\n          onInput: $event => _ctx.updateCell(rowIndex + 1, cellIndex)\n        }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), [[_vModelText, _ctx.filteredData[rowIndex + 1][cellIndex]]])])]);\n      }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Input Form for Adding New Data \"), _ctx.jsonData && _ctx.jsonData.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredData[0], (cell, cellIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: cellIndex\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => _ctx.newRow[cellIndex] = $event,\n      placeholder: \"Enter value\"\n    }, null, 8 /* PROPS */, _hoisted_10), [[_vModelText, _ctx.newRow[cellIndex]]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.addNewRow && _ctx.addNewRow(...args))\n  }, \"Add Row\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Display JSON Data \"), _ctx.jsonData && _ctx.jsonData.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"pre\", null, _toDisplayString(_ctx.jsonData), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","type","onChange","_cache","args","_ctx","handleFileUpload","$event","searchQuery","placeholder","_createCommentVNode","filteredData","length","_hoisted_3","_Fragment","_renderList","slice","row","rowIndex","_hoisted_4","_createTextVNode","_toDisplayString","onClick","toggleAccordion","expandedIndex","_hoisted_5","_createVNode","_Transition","name","default","_withCtx","_hoisted_6","cell","cellIndex","onInput","updateCell","_hoisted_7","_","jsonData","_hoisted_8","_hoisted_9","newRow","_hoisted_10","addNewRow","_hoisted_11","_hoisted_12"],"sources":["C:\\jj\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"excel-to-json\">\n    <h1>Excel to JSON Converter</h1>\n    <input type=\"file\" @change=\"handleFileUpload\" />\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search...\" />\n\n    <!-- Edit Form -->\n    <div v-if=\"filteredData && filteredData.length\">\n      <div v-for=\"(row, rowIndex) in filteredData.slice(1)\" :key=\"rowIndex\" class=\"accordion-item\">\n        <div class=\"accordion-header\">\n          Row {{ rowIndex + 1 }}\n          <button @click=\"toggleAccordion(rowIndex)\" class=\"accordion-toggle\">\n            {{ expandedIndex === rowIndex ? '-' : '+' }}\n          </button>\n        </div>\n        <transition name=\"accordion\">\n          <div v-if=\"expandedIndex === rowIndex\" class=\"accordion-content\">\n            <table>\n              <tr v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\">\n                <th>{{ filteredData[0][cellIndex] }}</th>\n                <td>\n                  <!-- Editable input -->\n                  <input v-model=\"filteredData[rowIndex + 1][cellIndex]\" @input=\"updateCell(rowIndex + 1, cellIndex)\" />\n                </td>\n              </tr>\n            </table>\n          </div>\n        </transition>\n      </div>\n    </div>\n\n    <!-- Input Form for Adding New Data -->\n    <div class=\"add-row\" v-if=\"jsonData && jsonData.length\">\n      <h2>Add New Row</h2>\n      <div v-for=\"(cell, cellIndex) in filteredData[0]\" :key=\"cellIndex\">\n        <input v-model=\"newRow[cellIndex]\" placeholder=\"Enter value\" />\n      </div>\n      <button @click=\"addNewRow\">Add Row</button>\n    </div>\n\n    <!-- Display JSON Data -->\n    <div class=\"json-view\" v-if=\"jsonData && jsonData.length\">\n      <h2>JSON Data</h2>\n      <pre>{{ jsonData }}</pre>\n    </div>\n  </div>\n</template>\n\nimport * as XLSX from 'xlsx';\n\nexport default {\n  data() {\n    return {\n      jsonData: [], // Ensure this is an array\n      expandedIndex: null,\n      searchQuery: '',\n      newRow: [], // New row for user input\n    };\n  },\n  computed: {\n    filteredData() {\n      if (!this.searchQuery) return this.jsonData;\n      const lowerCaseQuery = this.searchQuery.toLowerCase();\n      return this.jsonData.filter(row =>\n        row.some(cell =>\n          cell.toString().toLowerCase().split(' ').some(word => word.includes(lowerCaseQuery))\n        )\n      );\n    },\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const firstSheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheetName];\n          this.jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n          this.newRow = Array(this.jsonData[0].length).fill(''); // Initialize newRow with empty strings\n        };\n        reader.readAsArrayBuffer(file);\n      }\n    },\n    toggleAccordion(index) {\n      this.expandedIndex = this.expandedIndex === index ? null : index;\n    },\n    updateCell(rowIndex, cellIndex) {\n      // This updates the cell value in jsonData\n      this.$set(this.jsonData[rowIndex], cellIndex, this.filteredData[rowIndex][cellIndex]);\n    },\n    addNewRow() {\n      // Validate newRow and add it to jsonData\n      if (this.newRow.length === this.filteredData[0].length) {\n        this.jsonData.push([...this.newRow]); // Use spread operator to avoid reference issues\n        this.newRow = Array(this.jsonData[0].length).fill(''); // Clear input fields\n      } else {\n        // Handle validation error (e.g., show an error message)\n      }\n    },\n  },\n};\n\n\n<style scoped>\nbody {\n  font-family: Arial, sans-serif;\n  background-color: white;\n  color: lightslategray;\n}\n\nh1 {\n  text-align: center;\n  margin-top: 20px;\n  color: lightslategray;\n}\n\ninput[type=\"file\"] {\n  display: block;\n  margin: 20px auto;\n}\n\n.excel-to-json {\n  font-family: Arial, sans-serif;\n  /* Add any additional styling here */\n}\n\n.accordion-item {\n  border: 1px solid #ddd;\n  margin: 10px auto;\n  width: 80%;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n}\n\n.accordion-header {\n  background-color: lightblue;\n  color: #fff;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.accordion-header:hover {\n  background-color: darkcyan;\n}\n\n.accordion-toggle {\n  background: none;\n  border: none;\n  font-size: 24px;\n  color: white;\n  cursor: pointer;\n  transition: transform 0.3s ease;\n}\n\n.accordion-toggle:focus {\n  outline: none;\n}\n\n.accordion-content {\n  padding: 15px;\n  background-color: white;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  border: 1px solid white;\n  padding: 10px;\n  text-align: left;\n}\n\nth {\n  background-color: white;\n}\n\n.accordion-enter-active, .accordion-leave-active {\n  transition: max-height 0.3s ease;\n}\n\n.accordion-enter, .accordion-leave-to {\n  max-height: 0;\n  overflow: hidden;\n}\n\n.accordion-enter-to, .accordion-leave {\n  max-height: 500px;\n  overflow: hidden;\n}\n\n.json-view {\n  margin: 20px auto;\n  width: 80%;\n  background-color: #f9f9f9;\n  border: 1px solid #ddd;\n  padding: 10px;\n  border-radius: 5px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}