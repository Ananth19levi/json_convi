{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport * as XLSX from 'xlsx';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nexport default {\n  data() {\n    return {\n      jsonData: [],\n      expandedIndex: null,\n      searchQuery: '',\n      newRow: [],\n      currentView: 'view',\n      isEditing: false\n    };\n  },\n  computed: {\n    filteredData() {\n      if (!this.searchQuery) return this.jsonData;\n      const lowerCaseQuery = this.searchQuery.toLowerCase();\n      return this.jsonData.filter(row => row.some(cell => cell.toString().toLowerCase().split(' ').some(word => word.includes(lowerCaseQuery))));\n    }\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, {\n            type: 'array'\n          });\n          const firstSheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheetName];\n          this.jsonData = XLSX.utils.sheet_to_json(worksheet, {\n            header: 1\n          });\n          this.newRow = Array(this.jsonData[0].length).fill('');\n        };\n        reader.readAsArrayBuffer(file);\n      }\n    },\n    toggleAccordion(index) {\n      this.expandedIndex = this.expandedIndex === index ? null : index;\n    },\n    viewData() {\n      this.isEditing = false;\n      this.currentView = 'view';\n    },\n    toggleEdit() {\n      this.isEditing = !this.isEditing;\n      this.currentView = 'view';\n    },\n    updateCell(rowIndex, cellIndex) {},\n    addNewRow() {\n      if (this.newRow.length === this.filteredData[0].length) {\n        this.jsonData.push([...this.newRow]);\n        this.newRow = Array(this.jsonData[0].length).fill('');\n      } else {}\n    },\n    exportToExcel() {\n      const ws = XLSX.utils.aoa_to_sheet(this.jsonData);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'exported_data.xlsx');\n    },\n    exportToPDF() {\n      const doc = new jsPDF();\n      doc.autoTable({\n        head: [this.jsonData[0]],\n        body: this.jsonData.slice(1)\n      });\n      doc.save('exported_data.pdf');\n    }\n  }\n};","map":{"version":3,"names":["XLSX","jsPDF","data","jsonData","expandedIndex","searchQuery","newRow","currentView","isEditing","computed","filteredData","lowerCaseQuery","toLowerCase","filter","row","some","cell","toString","split","word","includes","methods","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","Uint8Array","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","utils","sheet_to_json","header","Array","length","fill","readAsArrayBuffer","toggleAccordion","index","viewData","toggleEdit","updateCell","rowIndex","cellIndex","addNewRow","push","exportToExcel","ws","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","exportToPDF","doc","autoTable","head","body","slice","save"],"sources":["C:\\jj\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"excel-to-json\">\n    <h1>Excel to JSON Converter</h1>\n    <div class=\"container\">\n      <!-- Side Menu -->\n      <div class=\"side-menu\">\n        <label class=\"file-upload\">\n          Choose file\n          <input type=\"file\" @change=\"handleFileUpload\" />\n        </label>\n        <button @click=\"viewData\" :disabled=\"!jsonData.length\">View</button>\n        <button @click=\"toggleEdit\" :disabled=\"!jsonData.length || isEditing\">Edit</button>\n        <button @click=\"currentView = 'add'; isEditing = false\" :disabled=\"!jsonData.length || isEditing\">Add Row</button>\n        <button @click=\"exportToExcel\" :disabled=\"!jsonData.length\">Export to Excel</button>\n        <button @click=\"exportToPDF\" :disabled=\"!jsonData.length\">Export to PDF</button>\n      </div>\n\n      <div class=\"main-content\">\n        <!-- Display JSON Data -->\n        <div v-if=\"jsonData.length\">\n          <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search...\" />\n          <div v-if=\"filteredData && filteredData.length\">\n            <div v-for=\"(row, rowIndex) in filteredData.slice(1)\" :key=\"rowIndex\" class=\"accordion-item\">\n              <div class=\"accordion-header\" @click=\"toggleAccordion(rowIndex)\">\n                Row {{ rowIndex + 1 }}\n                <button class=\"accordion-toggle\">\n                  {{ expandedIndex === rowIndex ? '-' : '+' }}\n                </button>\n              </div>\n              <transition name=\"accordion\">\n                <div v-if=\"expandedIndex === rowIndex\" class=\"accordion-content\">\n                  <table>\n                    <tr v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\">\n                      <th>{{ filteredData[0][cellIndex] }}</th>\n                      <td>\n                        <!-- Editable input -->\n                        <input v-model=\"row[cellIndex]\" :readonly=\"!isEditing\" @input=\"updateCell(rowIndex, cellIndex)\" />\n                      </td>\n                    </tr>\n                  </table>\n                </div>\n              </transition>\n            </div>\n          </div>\n        </div>\n\n        <!-- Add Row -->\n        <div v-if=\"currentView === 'add' && jsonData.length\">\n          <h2>Add New Row</h2>\n          <div v-for=\"(cell, cellIndex) in filteredData[0]\" :key=\"cellIndex\">\n            <input v-model=\"newRow[cellIndex]\" placeholder=\"Enter value\" />\n          </div>\n          <button @click=\"addNewRow\">Add Row</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as XLSX from 'xlsx';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nexport default {\n  data() {\n    return {\n      jsonData: [], \n      expandedIndex: null,\n      searchQuery: '',\n      newRow: [], \n      currentView: 'view', \n      isEditing: false, \n    };\n  },\n  computed: {\n    filteredData() {\n      if (!this.searchQuery) return this.jsonData;\n      const lowerCaseQuery = this.searchQuery.toLowerCase();\n      return this.jsonData.filter(row =>\n        row.some(cell =>\n          cell.toString().toLowerCase().split(' ').some(word => word.includes(lowerCaseQuery))\n        )\n      );\n    },\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const firstSheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheetName];\n          this.jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n          this.newRow = Array(this.jsonData[0].length).fill(''); \n        };\n        reader.readAsArrayBuffer(file);\n      }\n    },\n    toggleAccordion(index) {\n      this.expandedIndex = this.expandedIndex === index ? null : index;\n    },\n    viewData() {\n      this.isEditing = false;\n      this.currentView = 'view';\n    },\n    toggleEdit() {\n      this.isEditing = !this.isEditing;\n      this.currentView = 'view';\n    },\n    updateCell(rowIndex, cellIndex) {\n      \n    },\n    addNewRow() {\n      \n      if (this.newRow.length === this.filteredData[0].length) {\n        this.jsonData.push([...this.newRow]); \n        this.newRow = Array(this.jsonData[0].length).fill(''); \n      } else {\n        \n      }\n    },\n    exportToExcel() {\n      const ws = XLSX.utils.aoa_to_sheet(this.jsonData);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n      XLSX.writeFile(wb, 'exported_data.xlsx');\n    },\n    exportToPDF() {\n      const doc = new jsPDF();\n      doc.autoTable({\n        head: [this.jsonData[0]],\n        body: this.jsonData.slice(1),\n      });\n      doc.save('exported_data.pdf');\n    },\n  },\n};\n</script>\n\n<style scoped>\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f7f9fc;\n  color: #333;\n}\n\nh1 {\n  text-align: center;\n  margin-top: 20px;\n  color: #2c3e50;\n  font-size: 2em;\n}\n\n.container {\n  display: flex;\n  margin-top: 20px;\n  padding: 20px;\n}\n\n.side-menu {\n  width: 200px;\n  background-color: #3498db;\n  padding: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n  margin-right: 20px;\n}\n\n.side-menu button,\n.side-menu input[type=\"file\"] {\n  display: block;\n  width: 90%;\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: #2980b9;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.file-upload {\n  display: block;\n  width: 90%;\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: #2980b9;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  text-align: center;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  position: relative;\n}\n\n.file-upload input[type=\"file\"] {\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n\n.side-menu button:disabled,\n.side-menu input[type=\"file\"]:disabled {\n  background-color: #95a5a6;\n}\n\n.side-menu button:hover:not(:disabled),\n.side-menu input[type=\"file\"]:hover:not(:disabled) {\n  background-color: #1abc9c;\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px;\n  background-color: #ecf0f1;\n  border-radius: 10px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\ninput[type=\"text\"] {\n  display: block;\n  margin: 20px 0;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n\n.accordion-item {\n  border: 1px solid #ddd;\n  margin: 10px 0;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  background-color: #fff;\n  transition: background-color 0.3s ease;\n}\n\n.accordion-item:hover {\n  background-color: #f1f1f1; /* Change to desired hover color */\n}\n\n.accordion-header {\n  background-color: #2980b9;\n  color: #fff;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n}\n\n.accordion-toggle {\n  background: none;\n  border: none;\n  font-size: 18px;\n  color: white;\n  transition: transform 0.3s ease;\n}\n\n.accordion-toggle:focus {\n  outline: none;\n}\n\n.accordion-content {\n  padding: 15px;\n  background-color: #f1f1f1;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth,\ntd {\n  border: 1px solid #ddd;\n  padding: 10px;\n  text-align: left;\n}\n\nth {\n  background-color: #f2f2f2;\n}\n\ntr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\nbutton {\n  cursor: pointer;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  margin-right: 10px;\n  transition: background-color 0.3s ease;\n}\n\nbutton:disabled {\n  background-color: #95a5a6;\n}\n\nbutton:hover:not(:disabled) {\n  background-color: #1abc9c;\n}\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}