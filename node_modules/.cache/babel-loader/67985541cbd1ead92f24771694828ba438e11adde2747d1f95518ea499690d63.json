{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Excel to JSON Converter\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */), $data.jsonData && $data.jsonData.length ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.jsonData[0], (header, index) => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: index\n    }, _toDisplayString(header), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.jsonData.slice(1), (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: rowIndex\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, cellIndex) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: cellIndex\n      }, _toDisplayString(cell), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","type","onChange","_cache","args","$options","handleFileUpload","$data","jsonData","length","_hoisted_2","_Fragment","_renderList","header","index","_toDisplayString","slice","row","rowIndex","cell","cellIndex","_createCommentVNode"],"sources":["C:\\jj\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Excel to JSON Converter</h1>\n    <input type=\"file\" @change=\"handleFileUpload\" />\n    <table v-if=\"jsonData && jsonData.length\">\n      <thead>\n        <tr>\n          <th v-for=\"(header, index) in jsonData[0]\" :key=\"index\">{{ header }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(row, rowIndex) in jsonData.slice(1)\" :key=\"rowIndex\">\n          <td v-for=\"(cell, cellIndex) in row\" :key=\"cellIndex\">{{ cell }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport * as XLSX from 'xlsx';\n\nexport default {\n  data() {\n    return {\n      jsonData: null,\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const firstSheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheetName];\n          this.jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n        };\n        reader.readAsArrayBuffer(file);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\nth, td {\n  border: 1px solid #ddd;\n  padding: 8px;\n}\nth {\n  background-color: #f2f2f2;\n  text-align: left;\n}\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAAgC,YAA5B,yBAAuB;;EAF/BC,GAAA;AAAA;;uBACEC,mBAAA,CAeM,cAdJC,UAAgC,EAChCH,mBAAA,CAAgD;IAAzCI,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC/BG,KAAA,CAAAC,QAAQ,IAAID,KAAA,CAAAC,QAAQ,CAACC,MAAM,I,cAAxCV,mBAAA,CAWQ,SAfZW,UAAA,GAKMb,mBAAA,CAIQ,gBAHNA,mBAAA,CAEK,c,kBADHE,mBAAA,CAAyEY,SAAA,QAPnFC,WAAA,CAOwCL,KAAA,CAAAC,QAAQ,KAPhD,CAOsBK,MAAM,EAAEC,KAAK;yBAAzBf,mBAAA,CAAyE;MAA7BD,GAAG,EAAEgB;IAAK,GAAAC,gBAAA,CAAKF,MAAM;sCAGrEhB,mBAAA,CAIQ,iB,kBAHNE,mBAAA,CAEKY,SAAA,QAbbC,WAAA,CAWsCL,KAAA,CAAAC,QAAQ,CAACQ,KAAK,KAXpD,CAWoBC,GAAG,EAAEC,QAAQ;yBAAzBnB,mBAAA,CAEK;MAF6CD,GAAG,EAAEoB;IAAQ,K,kBAC7DnB,mBAAA,CAAqEY,SAAA,QAZ/EC,WAAA,CAY0CK,GAAG,EAZ7C,CAYsBE,IAAI,EAAEC,SAAS;2BAA3BrB,mBAAA,CAAqE;QAA/BD,GAAG,EAAEsB;MAAS,GAAAL,gBAAA,CAAKI,IAAI;;wCAZvEE,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}