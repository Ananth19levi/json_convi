{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport * as XLSX from 'xlsx';\nexport default {\n  data() {\n    return {\n      jsonData: null\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, {\n            type: 'array'\n          });\n          const firstSheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheetName];\n          this.jsonData = XLSX.utils.sheet_to_json(worksheet, {\n            header: 1\n          });\n        };\n        reader.readAsArrayBuffer(file);\n      }\n    }\n  }\n};","map":{"version":3,"names":["XLSX","data","jsonData","methods","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","Uint8Array","result","workbook","read","type","firstSheetName","SheetNames","worksheet","Sheets","utils","sheet_to_json","header","readAsArrayBuffer"],"sources":["C:\\jj\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Excel to JSON Converter</h1>\n    <input type=\"file\" @change=\"handleFileUpload\" />\n    <pre>{{ jsonData }}</pre>\n  </div>\n</template>\n\n<script>\nimport * as XLSX from 'xlsx';\n\nexport default {\n  data() {\n    return {\n      jsonData: null,\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, { type: 'array' });\n          const firstSheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[firstSheetName];\n          this.jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n        };\n        reader.readAsArrayBuffer(file);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;;;;;AASA,OAAO,KAAKA,IAAG,MAAO,MAAM;AAE5B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAK,GAAKC,CAAC,IAAK;UACrB,MAAMX,IAAG,GAAI,IAAIY,UAAU,CAACD,CAAC,CAACL,MAAM,CAACO,MAAM,CAAC;UAC5C,MAAMC,QAAO,GAAIf,IAAI,CAACgB,IAAI,CAACf,IAAI,EAAE;YAAEgB,IAAI,EAAE;UAAQ,CAAC,CAAC;UACnD,MAAMC,cAAa,GAAIH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;UAC7C,MAAMC,SAAQ,GAAIL,QAAQ,CAACM,MAAM,CAACH,cAAc,CAAC;UACjD,IAAI,CAAChB,QAAO,GAAIF,IAAI,CAACsB,KAAK,CAACC,aAAa,CAACH,SAAS,EAAE;YAAEI,MAAM,EAAE;UAAE,CAAC,CAAC;QACpE,CAAC;QACDf,MAAM,CAACgB,iBAAiB,CAACnB,IAAI,CAAC;MAChC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}